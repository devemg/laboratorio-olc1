/*
 * Clase 3
 * Organización de Lenguajes y Compiladores 1 "A"
 * Aux. José Puac
 */

package Analizador;
import java_cup.runtime.Symbol;
%% 
%class Lexico
%public 
%line 
%char 
%cup 
%unicode
%ignorecase

%init{ 
    yyline = 1; 
    yychar = 1; 
%init} 

BLANCOS=[ \r\t]+
D=[0-9]+
DD=[0-9]+("."[  |0-9]+)?
CADENA = \"[^\"]*\"
%%


";" {return new Symbol(sym.PTCOMA,yyline,yychar, yytext());} 
"(" {return new Symbol(sym.PARIZQ,yyline,yychar, yytext());} 
")" {return new Symbol(sym.PARDER,yyline,yychar, yytext());} 

"+" {return new Symbol(sym.MAS,yyline,yychar, yytext());} 
"-" {return new Symbol(sym.MENOS,yyline,yychar, yytext());} 
"*" {return new Symbol(sym.POR,yyline,yychar, yytext());} 
"/" {return new Symbol(sym.DIVIDIDO,yyline,yychar, yytext());} 

">" {return new Symbol(sym.MAYORQ,yyline,yychar, yytext());} 
"<" {return new Symbol(sym.MENORQ,yyline,yychar, yytext());} 
"=" {return new Symbol(sym.IGUAL,yyline,yychar, yytext());} 
"!=" {return new Symbol(sym.DIFERENTE,yyline,yychar, yytext());} 


"number" {return new Symbol(sym.PR_NUMBER,yyline,yychar, yytext());} 
"boolean" {return new Symbol(sym.PR_BOOLEAN,yyline,yychar, yytext());} 
"string" {return new Symbol(sym.PR_STRING,yyline,yychar, yytext());} 

"if" {return new Symbol(sym.PR_STRING,yyline,yychar, yytext());} 
"else" {return new Symbol(sym.PR_STRING,yyline,yychar, yytext());} 
"for" {return new Symbol(sym.PR_STRING,yyline,yychar, yytext());} 
"while" {return new Symbol(sym.PR_STRING,yyline,yychar, yytext());} 
"print" {return new Symbol(sym.PR_STRING,yyline,yychar, yytext());} 

\n {yychar=1;}

{BLANCOS} {} 
{D} {return new Symbol(sym.ENTERO,yyline,yychar, yytext());} 
{DD} {return new Symbol(sym.DECIMAL,yyline,yychar, yytext());} 
{CADENA} {return new Symbol(sym.CADENA,yyline,yychar, yytext());} 

. {
    System.out.println("Este es un error lexico: "+yytext()+
    ", en la linea: "+yyline+", en la columna: "+yychar);
    //AnalizadorLenguaje.errores.add(new MyError(yyline, yycolumn, yytext(), "Se detectó un error léxico"));
}