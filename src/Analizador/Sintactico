/*
 * Clase 3
 * Organización de Lenguajes y Compiladores 1 "A"
 * Aux. José Puac
 */

package Analizador; 
import java_cup.runtime.*;

parser code  
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
        
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }  
:} 

terminal String PTCOMA,PARIZQ,PARDER;
terminal String MAS,MENOS,POR,DIVIDIDO, MAYORQ, MENORQ, IGUAL, DIFERENTE;
terminal String PR_IF,PR_ELSE,PR_PRINT, PR_FOR, PR_WHILE, PR_NUMBER, PR_BOOLEAN, PR_STRING;
terminal String ENTERO;
terminal String DECIMAL;
terminal String UMENOS;
terminal String CADENA;

non terminal ini;
non terminal instrucciones;
non terminal instruccion;
non terminal Nodo expresion;

precedence left MAS,MENOS;
precedence left POR,DIVIDIDO;
precedence right UMENOS; 

start with ini; 

ini::= CADENA
    |ENTERO
    |DECIMAL;